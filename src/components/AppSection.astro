---
// App section component with alternating layout support
import { Image } from 'astro:assets';

interface Props {
  title: string;
  whoItsFor: string;
  features: string[];
  officialContent: string | string[];
  iapInfo?: string;
  disclaimer?: string;
  storeLinks: Array<{
    name: string;
    url: string;
    icon: string;
    available?: boolean;
  }>;
  reverse?: boolean;
  imageSrc?: string;
  imageAlt?: string;
  images?: any[]; // optional array of astro:assets images (e.g., mobile device shots)
}

const {
  title,
  whoItsFor,
  features,
  officialContent,
  iapInfo,
  disclaimer,
  storeLinks,
  reverse = false,
  imageSrc,
  imageAlt = "",
  images
} = Astro.props;

// Map store names to brand shadow classes
const getStoreShadowClass = (storeName: string) => {
  const storeMap: Record<string, string> = {
    'Apple App Store': 'btn--shadow-apple',
    'Google Play': 'btn--shadow-google', 
    'Amazon Appstore': 'btn--shadow-amazon',
    'itch.io (DRM‑free)': 'btn--shadow-itch',
    'Microsoft Store': 'btn--shadow-microsoft',
    'Steam': 'btn--shadow-steam'
  };
  return storeMap[storeName] || 'btn--shadow-primary';
};
---

<section class={`app-section ${reverse ? 'app-section--reverse' : ''}`}>
  <!-- Layer reserved for future decoration; hidden by default -->
  <div class="grid-layer" aria-hidden="true"></div>
  <div class="container">
    <div class="app-section-grid">
      <!-- Content Column -->
      <div class="app-content">
        <div class="app-content-inner">
          <header class="section-head" aria-hidden="true">
            <span class="accent-line" aria-hidden="true"></span>
            <span class="badge-text">{title.includes('Mobile') ? 'Mobile App' : title.includes('Adventure') ? 'Coming Soon' : 'Desktop App'}</span>
          </header>
          <h2 class="section-title">{title}</h2>
          <p class="lead-accent" style="text-align: center; margin-bottom: 2rem;">{whoItsFor}</p>

          <div class="app-details">
            <div class="detail-block">
              <div class="feature-card">
                <h3>What it does</h3>
                <ul class="feature-list">
                  {features.map(feature => (
                    <li class="feature-item">
                      <i class="fa-slab fa-regular fa-check feature-check" aria-hidden="true"></i>
                      {feature}
                    </li>
                  ))}
                </ul>
              </div>
            </div>
            
            <div class="detail-block">
              {Array.isArray(officialContent) ? (
                <div class="feature-card">
                  <h3>Official content</h3>
                  <ul class="feature-list">
                    {officialContent.map(item => (
                      <li class="feature-item">
                        <i class="fa-slab fa-regular fa-check feature-check" aria-hidden="true"></i>
                        {item}
                      </li>
                    ))}
                  </ul>
                </div>
              ) : (
                <div class="feature-card">
                  <h3>Official content</h3>
                  <p>{officialContent}</p>
                </div>
              )}
              {iapInfo && (
                <div class="iap-notice collapsed" onclick="this.classList.toggle('collapsed')">
                  <i class="fa-slab fa-regular fa-info-circle" aria-hidden="true"></i>
                  <span class="iap-text">
                    <span class="collapsed-text">More details...</span>
                    <span class="full-text">{iapInfo}</span>
                  </span>
                </div>
              )}
              {disclaimer && (
                <div class="disclaimer-notice collapsed" onclick="this.classList.toggle('collapsed')">
                  <i class="fa-slab fa-regular fa-info-circle" aria-hidden="true"></i>
                  <span class="disclaimer-text">
                    <span class="collapsed-text">More details...</span>
                    <span class="full-text">{disclaimer}</span>
                  </span>
                </div>
              )}
            </div>

            <div class="detail-block">
              <h3>{storeLinks.length === 0 ? 'Availability' : 'Download now'}</h3>
              <div class="store-links">
                {storeLinks.length === 0 ? (
                  <div class="coming-soon-notice">
                    <i class="fa-slab fa-regular fa-clock" aria-hidden="true"></i>
                    <span>Coming soon — Stay tuned for updates!</span>
                  </div>
                ) : (
                  storeLinks.map(store => (
                    store.available !== false ? (
                      <a href={store.url} target="_blank" rel="noopener" class={`btn ${getStoreShadowClass(store.name)}`}>
                        <i class={store.icon} aria-hidden="true"></i>
                        {store.name}
                      </a>
                    ) : (
                      <span class="btn btn--tertiary" aria-disabled="true">
                        <i class={store.icon} aria-hidden="true"></i>
                        {store.name} — Coming soon
                      </span>
                    )
                  ))
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Image/Screenshot Column -->
      <div class="app-visual">
        {Array.isArray(images) && images.length > 0 ? (
          <figure class="device-carousel" aria-roledescription="carousel" aria-label={`${title} screenshots`}>
            <div class="device-stage">
              {images.map((img, idx) => (
                <div class={`device-frame ${idx === 0 ? 'is-active' : ''}`} role="group" aria-roledescription="slide" aria-label={`Slide ${idx + 1} of ${images.length}`}>
                  <Image class="device-shot" src={img} alt={imageAlt || `${title} screenshot ${idx + 1}`} loading={idx === 0 ? 'eager' : 'lazy'} decoding="async" fetchpriority={idx === 0 ? 'high' : 'auto'} />
                </div>
              ))}
            </div>
            <p class="sr-only device-status" aria-live="polite">Slide 1 of {images.length}</p>
            <script>
              import '../scripts/device-carousel.ts';
            </script>
          </figure>
        ) : (
          <div class="app-image-container">
            {imageSrc ? (
              <img src={imageSrc} alt={imageAlt} class="app-image" />
            ) : (
              <div class="app-placeholder">
                <i class="fa-solid fa-image placeholder-icon" aria-hidden="true"></i>
                <p class="placeholder-text">Screenshots<br/>Coming Soon</p>
              </div>
            )}
            <!-- Decorative geometric elements -->
            <div class="geometric-accent geometric-accent--1" aria-hidden="true"></div>
            <div class="geometric-accent geometric-accent--2" aria-hidden="true"></div>
          </div>
        )}
      </div>
    </div>
  </div>
</section>

<style>
  .app-section {
    padding: 4rem 0;
    position: relative;
  }
  
  .app-section:nth-child(even) {
    background: var(--color-surface-2);
  }
  
  .app-section-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    align-items: center;
  }
  
  .app-section--reverse .app-section-grid {
    direction: rtl;
  }
  
  .app-section--reverse .app-content {
    direction: ltr;
  }
  
  .app-content-inner {
    max-width: 500px;
    margin-left: auto;
  }
  
  .app-section--reverse .app-content-inner {
    margin-left: 0;
    margin-right: auto;
  }
  
  /* Removed .app-title - now using .section-title from cards.css */
  
  .detail-block {
    margin-bottom: 2rem;
  }
  
  .detail-block h3 {
    font-size: 1.125rem;
    font-weight: 700;
    color: var(--color-text);
    margin: 0 0 0.75rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.1);
  }

  .feature-card h3 {
    position: relative;
    padding-left: 16px;
  }

  .feature-card h3::before {
    content: '';
    position: absolute;
    width: 4px;
    height: 100%;
    background: var(--color-accent);
    left: 0;
    top: 0;
    border-radius: 0;
  }
  
  .detail-block p {
    color: var(--color-text-muted);
    line-height: 1.6;
    margin: 0;
  }
  
  .feature-card {
    background: var(--color-surface);
    border: var(--border-base);
    padding: 1.5rem;
    box-shadow: 4px 4px 0 0 rgba(0, 0, 0, 0.1);
  }

  .feature-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .feature-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 0;
    color: var(--color-text);
    font-weight: 500;
  }

  .feature-check {
    color: var(--color-primary);
    font-size: 1.1rem;
    flex-shrink: 0;
    filter: drop-shadow(1px 1px 0 rgba(0, 0, 0, 0.12));
  }
  
  .store-links { display: grid; gap: 0.75rem; }

  .coming-soon-notice {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem 1.25rem;
    background: var(--color-surface-2);
    border: var(--border-base);
    color: var(--color-text-muted);
    font-weight: 600;
    border-radius: 0;
    box-shadow: 2px 2px 0 0 var(--color-border);
  }

  .coming-soon-notice i {
    color: var(--color-accent);
    font-size: 1.125rem;
  }

  .iap-notice {
    background: var(--color-surface-2);
    border: var(--border-base);
    padding: 1rem;
    margin-top: 1rem;
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    font-size: 0.9rem;
    line-height: 1.5;
    color: var(--color-text-muted);
    border-radius: 0;
    cursor: pointer;
    transition: all 0.2s var(--easing-standard);
    box-shadow: 4px 4px 0 0 rgba(0, 0, 0, 0.1);
  }

  .iap-notice i {
    color: var(--color-primary);
    font-size: 1rem;
    margin-top: 0.125rem;
    flex-shrink: 0;
  }

  .iap-notice:hover {
    opacity: 0.8;
  }

  .iap-notice.collapsed .full-text,
  .disclaimer-notice.collapsed .full-text {
    display: none;
  }

  .iap-notice:not(.collapsed) .collapsed-text,
  .disclaimer-notice:not(.collapsed) .collapsed-text {
    display: none;
  }

  .iap-text,
  .disclaimer-text {
    overflow: hidden;
    transition: all 0.3s var(--easing-standard);
  }

  .collapsed-text {
    font-style: italic;
    color: var(--color-primary);
  }

  .disclaimer-notice {
    background: var(--color-surface-2);
    border: var(--border-base);
    padding: 1rem;
    margin-top: 1rem;
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    font-size: 0.9rem;
    line-height: 1.5;
    color: var(--color-text-muted);
    border-radius: 0;
    cursor: pointer;
    transition: all 0.2s var(--easing-standard);
    box-shadow: 4px 4px 0 0 rgba(0, 0, 0, 0.1);
  }

  .disclaimer-notice i {
    color: var(--color-accent);
    font-size: 1rem;
    margin-top: 0.125rem;
    flex-shrink: 0;
  }


  .disclaimer-notice:hover {
    opacity: 0.8;
  }
  
  .app-visual {
    position: relative;
  }
  
  .app-image-container {
    position: relative;
    border: var(--border-base);
    border-radius: 15px;
    background: var(--color-surface);
    aspect-ratio: 4/3;
    overflow: hidden;
    box-shadow: none;
  }
  
  .app-image { width: 100%; height: 100%; object-fit: cover; border-radius: inherit; }
  
  .app-placeholder {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    color: var(--color-text-muted);
    text-align: center;
  }
  
  .placeholder-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
    opacity: 0.5;
  }
  
  .placeholder-text {
    margin: 0;
    font-weight: 600;
    line-height: 1.4;
  }

  /* Device carousel (uses transparency + anchored drop shadow) */
  .device-carousel { position: relative; }
  .device-stage {
    position: relative;
    min-height: 600px;
    display: grid;
    place-items: center;
  }
  .device-frame {
    position: absolute;
    inset: 0;
    display: grid;
    place-items: center;
    opacity: 0;
    transition: opacity 400ms var(--easing-standard);
  }
  .device-frame.is-active { opacity: 1; }
  .device-shot {
    display: block;
    max-height: 800px;
    max-width: 100%;
    width: auto;
    height: auto;
    background: transparent; /* keep transparency; no drop shadow for screenshots */
  }

  /* Make desktop screenshots larger - allow overflow */
  .app-section--reverse .device-carousel .device-shot {
    max-height: 1500px !important;
    max-width: none !important; /* Remove width constraint */
    width: 1200px; /* Fixed width that can overflow */
  }

  .app-section--reverse .device-carousel .device-stage {
    min-height: 900px !important;
  }

  .app-section--reverse .device-carousel {
    overflow: visible; /* Allow overflow */
  }
  /* Lightbox */
  .lightbox { position: fixed; inset: 0; background: rgba(0,0,0,.6); display: grid; place-items: center; z-index: 50; }
  .lightbox .lb-inner { position: relative; max-width: 90vw; max-height: 90vh; }
  .lightbox img { max-width: 100%; max-height: 90vh; display: block; background: #fff; }
  .lightbox .lb-close { position: absolute; top: -12px; right: -12px; border: var(--border-base); background: #fff; padding: 4px 8px; cursor: pointer; }
  body.lb-open { overflow: hidden; }
  
  /* Grid layer for visual texture */
  .app-section .grid-layer {
    position: absolute;
    top: 0;
    right: 0;
    width: 50%;
    height: 100%;
    background-image:
      linear-gradient(var(--color-border) 1px, transparent 1px),
      linear-gradient(90deg, var(--color-border) 1px, transparent 1px);
    background-size: 20px 20px;
    opacity: 0.08;
    z-index: -2;
    pointer-events: none;
  }

  /* Geometric accents */
  .geometric-accent {
    position: absolute;
    border: var(--border-base);
    z-index: -1;
  }
  
  .geometric-accent {
    box-shadow: 4px 4px 0 0 rgba(0, 0, 0, 0.15);
    transition: all 0.3s var(--easing-standard);
  }

  .geometric-accent--1 {
    width: 80px;
    height: 80px;
    background: var(--color-accent);
    top: -30px;
    right: -30px;
    transform: rotate(45deg);
    border: var(--border-thick);
  }

  .geometric-accent--2 {
    width: 48px;
    height: 48px;
    background: var(--color-primary);
    bottom: -20px;
    left: -20px;
    border: var(--border-base);
    box-shadow: 3px 3px 0 0 rgba(0, 0, 0, 0.2);
  }

  /* Add more geometric elements for visual interest */
  .app-image-container::before {
    content: '';
    position: absolute;
    width: 24px;
    height: 24px;
    background: var(--color-accent);
    border: var(--border-base);
    top: 50%;
    left: -12px;
    transform: translateY(-50%) rotate(45deg);
    box-shadow: 2px 2px 0 0 rgba(0, 0, 0, 0.1);
    z-index: 1;
  }
  
  /* Responsive design */
  @media (max-width: 968px) {
    .app-section .grid-layer {
      display: none;
    }

    .app-section-grid {
      grid-template-columns: 1fr;
      gap: 3rem;
    }
    
    .app-section--reverse .app-section-grid {
      direction: ltr;
    }
    
    .app-content-inner {
      margin-left: 0;
      max-width: none;
    }
    
    .app-section--reverse .app-content-inner {
      margin-right: 0;
    }
    
    .app-title {
      font-size: 2rem;
    }

    .geometric-accent--1 {
      width: 60px;
      height: 60px;
      top: -20px;
      right: -20px;
    }

    .geometric-accent--2 {
      width: 36px;
      height: 36px;
      bottom: -12px;
      left: -12px;
    }

    .feature-item {
      padding: 0.6rem 0.8rem;
      font-size: 0.9rem;
    }

    .device-stage { min-height: 520px; }
    .device-shot { height: 520px; }
  }
  
  @media (max-width: 640px) {
    .app-section {
      padding: 3rem 0;
    }
    
    .store-links {
      gap: 0.5rem;
    }
    
    .store-link {
      padding: 0.625rem 0.875rem;
      font-size: 0.9rem;
    }
    .device-stage { min-height: 420px; }
    .device-shot { height: 420px; }
  }
</style>
